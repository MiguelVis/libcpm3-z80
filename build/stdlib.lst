                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12391 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module stdlib
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _isspace
                                     12 	.globl __split
                                     13 	.globl __merge_with_next
                                     14 	.globl __match_free_block
                                     15 	.globl __list_find
                                     16 	.globl __list_match_eq
                                     17 	.globl _memset
                                     18 	.globl __bdos
                                     19 	.globl _exit
                                     20 	.globl _abs
                                     21 	.globl _atoi
                                     22 	.globl _rand
                                     23 	.globl _srand
                                     24 	.globl _strtoul
                                     25 	.globl _strtol
                                     26 	.globl _malloc
                                     27 	.globl _free
                                     28 	.globl _calloc
                                     29 ;--------------------------------------------------------
                                     30 ; special function registers
                                     31 ;--------------------------------------------------------
                                     32 ;--------------------------------------------------------
                                     33 ; ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area _DATA
                                     36 ;--------------------------------------------------------
                                     37 ; ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area _INITIALIZED
                           000000    40 Fstdlib$_next$0_0$0==.
      000000                         41 __next:
      000000                         42 	.ds 4
                                     43 ;--------------------------------------------------------
                                     44 ; absolute external ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area _DABS (ABS)
                                     47 ;--------------------------------------------------------
                                     48 ; global & static initialisations
                                     49 ;--------------------------------------------------------
                                     50 	.area _HOME
                                     51 	.area _GSINIT
                                     52 	.area _GSFINAL
                                     53 	.area _GSINIT
                                     54 ;--------------------------------------------------------
                                     55 ; Home
                                     56 ;--------------------------------------------------------
                                     57 	.area _HOME
                                     58 	.area _HOME
                                     59 ;--------------------------------------------------------
                                     60 ; code
                                     61 ;--------------------------------------------------------
                                     62 	.area _CODE
                           000000    63 	G$exit$0$0	= .
                                     64 	.globl	G$exit$0$0
                           000000    65 	C$stdlib.c$20$0_0$45	= .
                                     66 	.globl	C$stdlib.c$20$0_0$45
                                     67 ;stdlib.c:20: void exit(int status)
                                     68 ;	---------------------------------
                                     69 ; Function exit
                                     70 ; ---------------------------------
      000000                         71 _exit::
      000000 F5               [11]   72 	push	af
      000001 3B               [ 6]   73 	dec	sp
                           000002    74 	C$stdlib.c$24$2_0$46	= .
                                     75 	.globl	C$stdlib.c$24$2_0$46
                                     76 ;stdlib.c:24: bdos_call_t bdc = { P_TERMCPM, { (uint16_t)0 } };
      000002 21 00 00         [10]   77 	ld	hl, #0
      000005 39               [11]   78 	add	hl, sp
      000006 36 00            [10]   79 	ld	(hl), #0x00
      000008 21 00 00         [10]   80 	ld	hl, #0
      00000B 39               [11]   81 	add	hl, sp
      00000C EB               [ 4]   82 	ex	de, hl
      00000D 4B               [ 4]   83 	ld	c, e
      00000E 42               [ 4]   84 	ld	b, d
      00000F 03               [ 6]   85 	inc	bc
      000010 AF               [ 4]   86 	xor	a, a
      000011 02               [ 7]   87 	ld	(bc), a
      000012 03               [ 6]   88 	inc	bc
      000013 02               [ 7]   89 	ld	(bc), a
                           000014    90 	C$stdlib.c$25$1_1$46	= .
                                     91 	.globl	C$stdlib.c$25$1_1$46
                                     92 ;stdlib.c:25: _bdos(&bdc);
      000014 D5               [11]   93 	push	de
      000015 CDr00r00         [17]   94 	call	__bdos
      000018 F1               [10]   95 	pop	af
                           000019    96 	C$stdlib.c$26$1_1$45	= .
                                     97 	.globl	C$stdlib.c$26$1_1$45
                                     98 ;stdlib.c:26: }
      000019 F1               [10]   99 	pop	af
      00001A 33               [ 6]  100 	inc	sp
                           00001B   101 	C$stdlib.c$26$1_1$45	= .
                                    102 	.globl	C$stdlib.c$26$1_1$45
                           00001B   103 	XG$exit$0$0	= .
                                    104 	.globl	XG$exit$0$0
      00001B C9               [10]  105 	ret
                           00001C   106 	G$abs$0$0	= .
                                    107 	.globl	G$abs$0$0
                           00001C   108 	C$stdlib.c$28$1_1$48	= .
                                    109 	.globl	C$stdlib.c$28$1_1$48
                                    110 ;stdlib.c:28: int abs(int i)
                                    111 ;	---------------------------------
                                    112 ; Function abs
                                    113 ; ---------------------------------
      00001C                        114 _abs::
                           00001C   115 	C$stdlib.c$30$1_0$48	= .
                                    116 	.globl	C$stdlib.c$30$1_0$48
                                    117 ;stdlib.c:30: return i < 0 ? -i : i;
      00001C 21 03 00         [10]  118 	ld	hl, #0x3
      00001F 39               [11]  119 	add	hl, sp
      000020 CB 7E            [12]  120 	bit	7, (hl)
      000022 28 0D            [12]  121 	jr	Z, 00103$
      000024 21 02 00         [10]  122 	ld	hl, #2
      000027 39               [11]  123 	add	hl, sp
      000028 AF               [ 4]  124 	xor	a, a
      000029 96               [ 7]  125 	sub	a, (hl)
      00002A 23               [ 6]  126 	inc	hl
      00002B 5F               [ 4]  127 	ld	e, a
      00002C 9F               [ 4]  128 	sbc	a, a
      00002D 96               [ 7]  129 	sub	a, (hl)
      00002E 57               [ 4]  130 	ld	d, a
      00002F 18 04            [12]  131 	jr	00104$
      000031                        132 00103$:
      000031 E1               [10]  133 	pop	hl
      000032 D1               [10]  134 	pop	de
      000033 D5               [11]  135 	push	de
      000034 E5               [11]  136 	push	hl
      000035                        137 00104$:
      000035 EB               [ 4]  138 	ex	de, hl
                           000036   139 	C$stdlib.c$31$1_0$48	= .
                                    140 	.globl	C$stdlib.c$31$1_0$48
                                    141 ;stdlib.c:31: }
                           000036   142 	C$stdlib.c$31$1_0$48	= .
                                    143 	.globl	C$stdlib.c$31$1_0$48
                           000036   144 	XG$abs$0$0	= .
                                    145 	.globl	XG$abs$0$0
      000036 C9               [10]  146 	ret
                           000037   147 	G$atoi$0$0	= .
                                    148 	.globl	G$atoi$0$0
                           000037   149 	C$stdlib.c$33$1_0$50	= .
                                    150 	.globl	C$stdlib.c$33$1_0$50
                                    151 ;stdlib.c:33: int atoi(const char *str)
                                    152 ;	---------------------------------
                                    153 ; Function atoi
                                    154 ; ---------------------------------
      000037                        155 _atoi::
      000037 DD E5            [15]  156 	push	ix
      000039 DD 21 00 00      [14]  157 	ld	ix,#0
      00003D DD 39            [15]  158 	add	ix,sp
                           00003F   159 	C$stdlib.c$35$2_0$50	= .
                                    160 	.globl	C$stdlib.c$35$2_0$50
                                    161 ;stdlib.c:35: int res = 0;
                           00003F   162 	C$stdlib.c$36$1_0$50	= .
                                    163 	.globl	C$stdlib.c$36$1_0$50
                                    164 ;stdlib.c:36: for (int i = 0; str[i] != '\0'; ++i)
      00003F 21 00 00         [10]  165 	ld	hl,#0x0000
      000042 5D               [ 4]  166 	ld	e,l
      000043 54               [ 4]  167 	ld	d,h
      000044                        168 00103$:
      000044 7B               [ 4]  169 	ld	a, e
      000045 DD 86 04         [19]  170 	add	a, 4 (ix)
      000048 4F               [ 4]  171 	ld	c, a
      000049 7A               [ 4]  172 	ld	a, d
      00004A DD 8E 05         [19]  173 	adc	a, 5 (ix)
      00004D 47               [ 4]  174 	ld	b, a
      00004E 0A               [ 7]  175 	ld	a, (bc)
      00004F 4F               [ 4]  176 	ld	c, a
      000050 B7               [ 4]  177 	or	a, a
      000051 28 16            [12]  178 	jr	Z, 00101$
                           000053   179 	C$stdlib.c$37$2_0$51	= .
                                    180 	.globl	C$stdlib.c$37$2_0$51
                                    181 ;stdlib.c:37: res = res * 10 + str[i] - '0';
      000053 D5               [11]  182 	push	de
      000054 5D               [ 4]  183 	ld	e, l
      000055 54               [ 4]  184 	ld	d, h
      000056 29               [11]  185 	add	hl, hl
      000057 29               [11]  186 	add	hl, hl
      000058 19               [11]  187 	add	hl, de
      000059 29               [11]  188 	add	hl, hl
      00005A D1               [10]  189 	pop	de
      00005B 06 00            [ 7]  190 	ld	b, #0x00
      00005D 09               [11]  191 	add	hl, bc
      00005E 7D               [ 4]  192 	ld	a, l
      00005F C6 D0            [ 7]  193 	add	a, #0xd0
      000061 6F               [ 4]  194 	ld	l, a
                                    195 ;	spillPairReg hl
                                    196 ;	spillPairReg hl
      000062 7C               [ 4]  197 	ld	a, h
      000063 CE FF            [ 7]  198 	adc	a, #0xff
      000065 67               [ 4]  199 	ld	h, a
                                    200 ;	spillPairReg hl
                                    201 ;	spillPairReg hl
                           000066   202 	C$stdlib.c$36$2_0$51	= .
                                    203 	.globl	C$stdlib.c$36$2_0$51
                                    204 ;stdlib.c:36: for (int i = 0; str[i] != '\0'; ++i)
      000066 13               [ 6]  205 	inc	de
      000067 18 DB            [12]  206 	jr	00103$
      000069                        207 00101$:
                           000069   208 	C$stdlib.c$38$1_0$50	= .
                                    209 	.globl	C$stdlib.c$38$1_0$50
                                    210 ;stdlib.c:38: return res;
                           000069   211 	C$stdlib.c$39$1_0$50	= .
                                    212 	.globl	C$stdlib.c$39$1_0$50
                                    213 ;stdlib.c:39: }
      000069 DD E1            [14]  214 	pop	ix
                           00006B   215 	C$stdlib.c$39$1_0$50	= .
                                    216 	.globl	C$stdlib.c$39$1_0$50
                           00006B   217 	XG$atoi$0$0	= .
                                    218 	.globl	XG$atoi$0$0
      00006B C9               [10]  219 	ret
                           00006C   220 	G$rand$0$0	= .
                                    221 	.globl	G$rand$0$0
                           00006C   222 	C$stdlib.c$43$1_0$53	= .
                                    223 	.globl	C$stdlib.c$43$1_0$53
                                    224 ;stdlib.c:43: int rand(void) /* RAND_MAX assumed to be 32767 */
                                    225 ;	---------------------------------
                                    226 ; Function rand
                                    227 ; ---------------------------------
      00006C                        228 _rand::
                           00006C   229 	C$stdlib.c$45$1_0$53	= .
                                    230 	.globl	C$stdlib.c$45$1_0$53
                                    231 ;stdlib.c:45: _next = _next * 1103515245 + 12345;
      00006C 2Ar02r00         [16]  232 	ld	hl, (__next + 2)
      00006F E5               [11]  233 	push	hl
      000070 2Ar00r00         [16]  234 	ld	hl, (__next)
      000073 E5               [11]  235 	push	hl
      000074 21 C6 41         [10]  236 	ld	hl, #0x41c6
      000077 E5               [11]  237 	push	hl
      000078 21 6D 4E         [10]  238 	ld	hl, #0x4e6d
      00007B E5               [11]  239 	push	hl
      00007C CDr00r00         [17]  240 	call	__mullong
      00007F F1               [10]  241 	pop	af
      000080 F1               [10]  242 	pop	af
      000081 F1               [10]  243 	pop	af
      000082 F1               [10]  244 	pop	af
      000083 4D               [ 4]  245 	ld	c, l
      000084 44               [ 4]  246 	ld	b, h
      000085 79               [ 4]  247 	ld	a, c
      000086 21r00r00         [10]  248 	ld	hl, #__next
      000089 C6 39            [ 7]  249 	add	a, #0x39
      00008B 77               [ 7]  250 	ld	(hl), a
      00008C 23               [ 6]  251 	inc	hl
      00008D 78               [ 4]  252 	ld	a, b
      00008E CE 30            [ 7]  253 	adc	a, #0x30
      000090 77               [ 7]  254 	ld	(hl), a
      000091 23               [ 6]  255 	inc	hl
      000092 7B               [ 4]  256 	ld	a, e
      000093 CE 00            [ 7]  257 	adc	a, #0x00
      000095 77               [ 7]  258 	ld	(hl), a
      000096 23               [ 6]  259 	inc	hl
      000097 7A               [ 4]  260 	ld	a, d
      000098 CE 00            [ 7]  261 	adc	a, #0x00
      00009A 77               [ 7]  262 	ld	(hl), a
                           00009B   263 	C$stdlib.c$46$1_0$53	= .
                                    264 	.globl	C$stdlib.c$46$1_0$53
                                    265 ;stdlib.c:46: return (unsigned int)(_next / 65536) % 32768;
      00009B 2Ar02r00         [16]  266 	ld	hl, (__next + 2)
      00009E CB BC            [ 8]  267 	res	7, h
                           0000A0   268 	C$stdlib.c$47$1_0$53	= .
                                    269 	.globl	C$stdlib.c$47$1_0$53
                                    270 ;stdlib.c:47: }
                           0000A0   271 	C$stdlib.c$47$1_0$53	= .
                                    272 	.globl	C$stdlib.c$47$1_0$53
                           0000A0   273 	XG$rand$0$0	= .
                                    274 	.globl	XG$rand$0$0
      0000A0 C9               [10]  275 	ret
                           0000A1   276 	G$srand$0$0	= .
                                    277 	.globl	G$srand$0$0
                           0000A1   278 	C$stdlib.c$49$1_0$55	= .
                                    279 	.globl	C$stdlib.c$49$1_0$55
                                    280 ;stdlib.c:49: void srand(unsigned int seed)
                                    281 ;	---------------------------------
                                    282 ; Function srand
                                    283 ; ---------------------------------
      0000A1                        284 _srand::
                           0000A1   285 	C$stdlib.c$51$1_0$55	= .
                                    286 	.globl	C$stdlib.c$51$1_0$55
                                    287 ;stdlib.c:51: _next = seed;
      0000A1 FD 21 02 00      [14]  288 	ld	iy, #2
      0000A5 FD 39            [15]  289 	add	iy, sp
      0000A7 FD 7E 00         [19]  290 	ld	a, 0 (iy)
      0000AA 32r00r00         [13]  291 	ld	(__next+0), a
      0000AD FD 7E 01         [19]  292 	ld	a, 1 (iy)
      0000B0 32r01r00         [13]  293 	ld	(__next+1), a
      0000B3 AF               [ 4]  294 	xor	a, a
      0000B4 32r02r00         [13]  295 	ld	(__next+2), a
      0000B7 32r03r00         [13]  296 	ld	(__next+3), a
                           0000BA   297 	C$stdlib.c$52$1_0$55	= .
                                    298 	.globl	C$stdlib.c$52$1_0$55
                                    299 ;stdlib.c:52: }
                           0000BA   300 	C$stdlib.c$52$1_0$55	= .
                                    301 	.globl	C$stdlib.c$52$1_0$55
                           0000BA   302 	XG$srand$0$0	= .
                                    303 	.globl	XG$srand$0$0
      0000BA C9               [10]  304 	ret
                           0000BB   305 	G$strtoul$0$0	= .
                                    306 	.globl	G$strtoul$0$0
                           0000BB   307 	C$stdlib.c$65$1_0$57	= .
                                    308 	.globl	C$stdlib.c$65$1_0$57
                                    309 ;stdlib.c:65: unsigned long strtoul(char *string, char **end_ptr, int base)
                                    310 ;	---------------------------------
                                    311 ; Function strtoul
                                    312 ; ---------------------------------
      0000BB                        313 _strtoul::
      0000BB DD E5            [15]  314 	push	ix
      0000BD DD 21 00 00      [14]  315 	ld	ix,#0
      0000C1 DD 39            [15]  316 	add	ix,sp
      0000C3 21 EC FF         [10]  317 	ld	hl, #-20
      0000C6 39               [11]  318 	add	hl, sp
      0000C7 F9               [ 6]  319 	ld	sp, hl
                           0000C8   320 	C$stdlib.c$68$2_0$57	= .
                                    321 	.globl	C$stdlib.c$68$2_0$57
                                    322 ;stdlib.c:68: register unsigned long int result = 0;
      0000C8 AF               [ 4]  323 	xor	a, a
      0000C9 DD 77 F5         [19]  324 	ld	-11 (ix), a
      0000CC DD 77 F6         [19]  325 	ld	-10 (ix), a
      0000CF DD 77 F7         [19]  326 	ld	-9 (ix), a
      0000D2 DD 77 F8         [19]  327 	ld	-8 (ix), a
                           0000D5   328 	C$stdlib.c$70$2_0$57	= .
                                    329 	.globl	C$stdlib.c$70$2_0$57
                                    330 ;stdlib.c:70: int any_digits = 0;
      0000D5 AF               [ 4]  331 	xor	a, a
      0000D6 DD 77 F3         [19]  332 	ld	-13 (ix), a
      0000D9 DD 77 F4         [19]  333 	ld	-12 (ix), a
                           0000DC   334 	C$stdlib.c$73$1_0$57	= .
                                    335 	.globl	C$stdlib.c$73$1_0$57
                                    336 ;stdlib.c:73: p = string;
      0000DC DD 7E 04         [19]  337 	ld	a, 4 (ix)
      0000DF DD 77 F0         [19]  338 	ld	-16 (ix), a
      0000E2 DD 7E 05         [19]  339 	ld	a, 5 (ix)
      0000E5 DD 77 F1         [19]  340 	ld	-15 (ix), a
                           0000E8   341 	C$stdlib.c$74$1_0$57	= .
                                    342 	.globl	C$stdlib.c$74$1_0$57
                                    343 ;stdlib.c:74: while (isspace(*p))
      0000E8 DD 7E F0         [19]  344 	ld	a, -16 (ix)
      0000EB DD 77 FA         [19]  345 	ld	-6 (ix), a
      0000EE DD 7E F1         [19]  346 	ld	a, -15 (ix)
      0000F1 DD 77 FB         [19]  347 	ld	-5 (ix), a
      0000F4                        348 00101$:
      0000F4 DD 6E FA         [19]  349 	ld	l, -6 (ix)
      0000F7 DD 66 FB         [19]  350 	ld	h, -5 (ix)
      0000FA 4E               [ 7]  351 	ld	c, (hl)
      0000FB 06 00            [ 7]  352 	ld	b, #0x00
      0000FD C5               [11]  353 	push	bc
      0000FE CDr00r00         [17]  354 	call	_isspace
      000101 F1               [10]  355 	pop	af
                           000102   356 	C$stdlib.c$76$1_0$57	= .
                                    357 	.globl	C$stdlib.c$76$1_0$57
                                    358 ;stdlib.c:76: p += 1;
      000102 DD 7E FA         [19]  359 	ld	a, -6 (ix)
      000105 C6 01            [ 7]  360 	add	a, #0x01
      000107 DD 77 FC         [19]  361 	ld	-4 (ix), a
      00010A DD 7E FB         [19]  362 	ld	a, -5 (ix)
      00010D CE 00            [ 7]  363 	adc	a, #0x00
      00010F DD 77 FD         [19]  364 	ld	-3 (ix), a
                           000112   365 	C$stdlib.c$74$1_0$57	= .
                                    366 	.globl	C$stdlib.c$74$1_0$57
                                    367 ;stdlib.c:74: while (isspace(*p))
      000112 7C               [ 4]  368 	ld	a, h
      000113 B5               [ 4]  369 	or	a, l
      000114 28 0E            [12]  370 	jr	Z, 00177$
                           000116   371 	C$stdlib.c$76$2_0$58	= .
                                    372 	.globl	C$stdlib.c$76$2_0$58
                                    373 ;stdlib.c:76: p += 1;
      000116 DD 7E FC         [19]  374 	ld	a, -4 (ix)
      000119 DD 77 FA         [19]  375 	ld	-6 (ix), a
      00011C DD 7E FD         [19]  376 	ld	a, -3 (ix)
      00011F DD 77 FB         [19]  377 	ld	-5 (ix), a
      000122 18 D0            [12]  378 	jr	00101$
      000124                        379 00177$:
      000124 DD 7E FA         [19]  380 	ld	a, -6 (ix)
      000127 DD 77 FE         [19]  381 	ld	-2 (ix), a
      00012A DD 7E FB         [19]  382 	ld	a, -5 (ix)
      00012D DD 77 FF         [19]  383 	ld	-1 (ix), a
                           000130   384 	C$stdlib.c$78$1_0$57	= .
                                    385 	.globl	C$stdlib.c$78$1_0$57
                                    386 ;stdlib.c:78: if (base == 0)
      000130 DD 7E 09         [19]  387 	ld	a, 9 (ix)
      000133 DD B6 08         [19]  388 	or	a, 8 (ix)
      000136 20 50            [12]  389 	jr	NZ, 00116$
                           000138   390 	C$stdlib.c$80$2_0$59	= .
                                    391 	.globl	C$stdlib.c$80$2_0$59
                                    392 ;stdlib.c:80: if (*p == '0')
      000138 DD 6E FA         [19]  393 	ld	l, -6 (ix)
      00013B DD 66 FB         [19]  394 	ld	h, -5 (ix)
      00013E 7E               [ 7]  395 	ld	a, (hl)
      00013F D6 30            [ 7]  396 	sub	a, #0x30
      000141 20 3B            [12]  397 	jr	NZ, 00108$
                           000143   398 	C$stdlib.c$82$3_0$60	= .
                                    399 	.globl	C$stdlib.c$82$3_0$60
                                    400 ;stdlib.c:82: p += 1;
      000143 DD 7E FC         [19]  401 	ld	a, -4 (ix)
      000146 DD 77 FE         [19]  402 	ld	-2 (ix), a
      000149 DD 7E FD         [19]  403 	ld	a, -3 (ix)
      00014C DD 77 FF         [19]  404 	ld	-1 (ix), a
                           00014F   405 	C$stdlib.c$83$3_0$60	= .
                                    406 	.globl	C$stdlib.c$83$3_0$60
                                    407 ;stdlib.c:83: if (*p == 'x')
      00014F DD 6E FE         [19]  408 	ld	l, -2 (ix)
      000152 DD 66 FF         [19]  409 	ld	h, -1 (ix)
      000155 7E               [ 7]  410 	ld	a, (hl)
      000156 D6 78            [ 7]  411 	sub	a, #0x78
      000158 20 12            [12]  412 	jr	NZ, 00105$
                           00015A   413 	C$stdlib.c$85$4_0$61	= .
                                    414 	.globl	C$stdlib.c$85$4_0$61
                                    415 ;stdlib.c:85: p += 1;
      00015A DD 34 FE         [23]  416 	inc	-2 (ix)
      00015D 20 03            [12]  417 	jr	NZ, 00278$
      00015F DD 34 FF         [23]  418 	inc	-1 (ix)
      000162                        419 00278$:
                           000162   420 	C$stdlib.c$86$4_0$61	= .
                                    421 	.globl	C$stdlib.c$86$4_0$61
                                    422 ;stdlib.c:86: base = 16;
      000162 DD 36 08 10      [19]  423 	ld	8 (ix), #0x10
      000166 DD 36 09 00      [19]  424 	ld	9 (ix), #0
      00016A 18 4C            [12]  425 	jr	00117$
      00016C                        426 00105$:
                           00016C   427 	C$stdlib.c$90$4_0$62	= .
                                    428 	.globl	C$stdlib.c$90$4_0$62
                                    429 ;stdlib.c:90: any_digits = 1;
      00016C DD 36 F3 01      [19]  430 	ld	-13 (ix), #0x01
      000170 DD 36 F4 00      [19]  431 	ld	-12 (ix), #0
                           000174   432 	C$stdlib.c$91$4_0$62	= .
                                    433 	.globl	C$stdlib.c$91$4_0$62
                                    434 ;stdlib.c:91: base = 8;
      000174 DD 36 08 08      [19]  435 	ld	8 (ix), #0x08
      000178 DD 36 09 00      [19]  436 	ld	9 (ix), #0
      00017C 18 3A            [12]  437 	jr	00117$
      00017E                        438 00108$:
                           00017E   439 	C$stdlib.c$95$2_0$59	= .
                                    440 	.globl	C$stdlib.c$95$2_0$59
                                    441 ;stdlib.c:95: base = 10;
      00017E DD 36 08 0A      [19]  442 	ld	8 (ix), #0x0a
      000182 DD 36 09 00      [19]  443 	ld	9 (ix), #0
      000186 18 30            [12]  444 	jr	00117$
      000188                        445 00116$:
                           000188   446 	C$stdlib.c$97$1_0$57	= .
                                    447 	.globl	C$stdlib.c$97$1_0$57
                                    448 ;stdlib.c:97: else if (base == 16)
      000188 DD 7E 08         [19]  449 	ld	a, 8 (ix)
      00018B D6 10            [ 7]  450 	sub	a, #0x10
      00018D DD B6 09         [19]  451 	or	a, 9 (ix)
      000190 20 26            [12]  452 	jr	NZ, 00117$
                           000192   453 	C$stdlib.c$99$2_0$63	= .
                                    454 	.globl	C$stdlib.c$99$2_0$63
                                    455 ;stdlib.c:99: if ((p[0] == '0') && (p[1] == 'x'))
      000192 DD 6E FA         [19]  456 	ld	l, -6 (ix)
      000195 DD 66 FB         [19]  457 	ld	h, -5 (ix)
      000198 7E               [ 7]  458 	ld	a, (hl)
      000199 D6 30            [ 7]  459 	sub	a, #0x30
      00019B 20 1B            [12]  460 	jr	NZ, 00117$
      00019D DD 6E FC         [19]  461 	ld	l, -4 (ix)
      0001A0 DD 66 FD         [19]  462 	ld	h, -3 (ix)
      0001A3 7E               [ 7]  463 	ld	a, (hl)
      0001A4 D6 78            [ 7]  464 	sub	a, #0x78
      0001A6 20 10            [12]  465 	jr	NZ, 00117$
                           0001A8   466 	C$stdlib.c$101$3_0$64	= .
                                    467 	.globl	C$stdlib.c$101$3_0$64
                                    468 ;stdlib.c:101: p += 2;
      0001A8 DD 7E FA         [19]  469 	ld	a, -6 (ix)
      0001AB C6 02            [ 7]  470 	add	a, #0x02
      0001AD DD 77 FE         [19]  471 	ld	-2 (ix), a
      0001B0 DD 7E FB         [19]  472 	ld	a, -5 (ix)
      0001B3 CE 00            [ 7]  473 	adc	a, #0x00
      0001B5 DD 77 FF         [19]  474 	ld	-1 (ix), a
      0001B8                        475 00117$:
                           0001B8   476 	C$stdlib.c$105$1_0$57	= .
                                    477 	.globl	C$stdlib.c$105$1_0$57
                                    478 ;stdlib.c:105: if (base == 8)
      0001B8 DD 7E 08         [19]  479 	ld	a, 8 (ix)
      0001BB D6 08            [ 7]  480 	sub	a, #0x08
      0001BD DD B6 09         [19]  481 	or	a, 9 (ix)
      0001C0 20 73            [12]  482 	jr	NZ, 00141$
      0001C2 DD 5E FE         [19]  483 	ld	e, -2 (ix)
      0001C5 DD 56 FF         [19]  484 	ld	d, -1 (ix)
      0001C8                        485 00147$:
                           0001C8   486 	C$stdlib.c$109$4_0$67	= .
                                    487 	.globl	C$stdlib.c$109$4_0$67
                                    488 ;stdlib.c:109: digit = *p - '0';
      0001C8 1A               [ 7]  489 	ld	a, (de)
      0001C9 0E 00            [ 7]  490 	ld	c, #0x00
      0001CB C6 D0            [ 7]  491 	add	a, #0xd0
      0001CD 6F               [ 4]  492 	ld	l, a
                                    493 ;	spillPairReg hl
                                    494 ;	spillPairReg hl
      0001CE 79               [ 4]  495 	ld	a, c
      0001CF CE FF            [ 7]  496 	adc	a, #0xff
      0001D1 67               [ 4]  497 	ld	h, a
                                    498 ;	spillPairReg hl
                                    499 ;	spillPairReg hl
                           0001D2   500 	C$stdlib.c$110$4_0$67	= .
                                    501 	.globl	C$stdlib.c$110$4_0$67
                                    502 ;stdlib.c:110: if (digit > 7)
      0001D2 3E 07            [ 7]  503 	ld	a, #0x07
      0001D4 BD               [ 4]  504 	cp	a, l
      0001D5 3E 00            [ 7]  505 	ld	a, #0x00
      0001D7 9C               [ 4]  506 	sbc	a, h
      0001D8 DArF0r04         [10]  507 	jp	C,00142$
                           0001DB   508 	C$stdlib.c$114$4_0$67	= .
                                    509 	.globl	C$stdlib.c$114$4_0$67
                                    510 ;stdlib.c:114: result = (result << 3) + digit;
      0001DB DD 7E F5         [19]  511 	ld	a, -11 (ix)
      0001DE DD 77 FC         [19]  512 	ld	-4 (ix), a
      0001E1 DD 7E F6         [19]  513 	ld	a, -10 (ix)
      0001E4 DD 77 FD         [19]  514 	ld	-3 (ix), a
      0001E7 DD 7E F7         [19]  515 	ld	a, -9 (ix)
      0001EA DD 77 FE         [19]  516 	ld	-2 (ix), a
      0001ED DD 7E F8         [19]  517 	ld	a, -8 (ix)
      0001F0 DD 77 FF         [19]  518 	ld	-1 (ix), a
      0001F3 06 03            [ 7]  519 	ld	b, #0x03
      0001F5                        520 00287$:
      0001F5 DD CB FC 26      [23]  521 	sla	-4 (ix)
      0001F9 DD CB FD 16      [23]  522 	rl	-3 (ix)
      0001FD DD CB FE 16      [23]  523 	rl	-2 (ix)
      000201 DD CB FF 16      [23]  524 	rl	-1 (ix)
      000205 10 EE            [13]  525 	djnz	00287$
      000207 01 00 00         [10]  526 	ld	bc, #0x0000
      00020A 7D               [ 4]  527 	ld	a, l
      00020B DD 86 FC         [19]  528 	add	a, -4 (ix)
      00020E 6F               [ 4]  529 	ld	l, a
                                    530 ;	spillPairReg hl
                                    531 ;	spillPairReg hl
      00020F 7C               [ 4]  532 	ld	a, h
      000210 DD 8E FD         [19]  533 	adc	a, -3 (ix)
      000213 67               [ 4]  534 	ld	h, a
                                    535 ;	spillPairReg hl
                                    536 ;	spillPairReg hl
      000214 79               [ 4]  537 	ld	a, c
      000215 DD 8E FE         [19]  538 	adc	a, -2 (ix)
      000218 4F               [ 4]  539 	ld	c, a
      000219 78               [ 4]  540 	ld	a, b
      00021A DD 8E FF         [19]  541 	adc	a, -1 (ix)
      00021D 47               [ 4]  542 	ld	b, a
      00021E DD 75 F5         [19]  543 	ld	-11 (ix), l
      000221 DD 74 F6         [19]  544 	ld	-10 (ix), h
      000224 DD 71 F7         [19]  545 	ld	-9 (ix), c
      000227 DD 70 F8         [19]  546 	ld	-8 (ix), b
                           00022A   547 	C$stdlib.c$115$4_0$67	= .
                                    548 	.globl	C$stdlib.c$115$4_0$67
                                    549 ;stdlib.c:115: any_digits = 1;
      00022A DD 36 F3 01      [19]  550 	ld	-13 (ix), #0x01
      00022E DD 36 F4 00      [19]  551 	ld	-12 (ix), #0
                           000232   552 	C$stdlib.c$107$3_0$66	= .
                                    553 	.globl	C$stdlib.c$107$3_0$66
                                    554 ;stdlib.c:107: for (;; p += 1)
      000232 13               [ 6]  555 	inc	de
      000233 18 93            [12]  556 	jr	00147$
      000235                        557 00141$:
                           000235   558 	C$stdlib.c$118$1_0$57	= .
                                    559 	.globl	C$stdlib.c$118$1_0$57
                                    560 ;stdlib.c:118: else if (base == 10)
      000235 DD 7E 08         [19]  561 	ld	a, 8 (ix)
      000238 D6 0A            [ 7]  562 	sub	a, #0x0a
      00023A DD B6 09         [19]  563 	or	a, 9 (ix)
      00023D C2rEFr02         [10]  564 	jp	NZ,00138$
      000240                        565 00149$:
                           000240   566 	C$stdlib.c$122$4_0$71	= .
                                    567 	.globl	C$stdlib.c$122$4_0$71
                                    568 ;stdlib.c:122: digit = *p - '0';
      000240 DD 6E FE         [19]  569 	ld	l, -2 (ix)
      000243 DD 66 FF         [19]  570 	ld	h, -1 (ix)
      000246 7E               [ 7]  571 	ld	a, (hl)
      000247 DD 77 FD         [19]  572 	ld	-3 (ix), a
      00024A DD 77 FA         [19]  573 	ld	-6 (ix), a
      00024D DD 36 FB 00      [19]  574 	ld	-5 (ix), #0x00
      000251 DD 7E FA         [19]  575 	ld	a, -6 (ix)
      000254 C6 D0            [ 7]  576 	add	a, #0xd0
      000256 DD 77 FC         [19]  577 	ld	-4 (ix), a
      000259 DD 7E FB         [19]  578 	ld	a, -5 (ix)
      00025C CE FF            [ 7]  579 	adc	a, #0xff
      00025E DD 77 FD         [19]  580 	ld	-3 (ix), a
                           000261   581 	C$stdlib.c$123$4_0$71	= .
                                    582 	.globl	C$stdlib.c$123$4_0$71
                                    583 ;stdlib.c:123: if (digit > 9)
      000261 3E 09            [ 7]  584 	ld	a, #0x09
      000263 DD BE FC         [19]  585 	cp	a, -4 (ix)
      000266 3E 00            [ 7]  586 	ld	a, #0x00
      000268 DD 9E FD         [19]  587 	sbc	a, -3 (ix)
      00026B DArDAr04         [10]  588 	jp	C, 00179$
                           00026E   589 	C$stdlib.c$127$1_0$57	= .
                                    590 	.globl	C$stdlib.c$127$1_0$57
                                    591 ;stdlib.c:127: result = (10 * result) + digit;
      00026E DD 6E F7         [19]  592 	ld	l, -9 (ix)
                                    593 ;	spillPairReg hl
                                    594 ;	spillPairReg hl
      000271 DD 66 F8         [19]  595 	ld	h, -8 (ix)
                                    596 ;	spillPairReg hl
                                    597 ;	spillPairReg hl
      000274 E5               [11]  598 	push	hl
      000275 DD 6E F5         [19]  599 	ld	l, -11 (ix)
                                    600 ;	spillPairReg hl
                                    601 ;	spillPairReg hl
      000278 DD 66 F6         [19]  602 	ld	h, -10 (ix)
                                    603 ;	spillPairReg hl
                                    604 ;	spillPairReg hl
      00027B E5               [11]  605 	push	hl
      00027C 21 00 00         [10]  606 	ld	hl, #0x0000
      00027F E5               [11]  607 	push	hl
      000280 2E 0A            [ 7]  608 	ld	l, #0x0a
      000282 E5               [11]  609 	push	hl
      000283 CDr00r00         [17]  610 	call	__mullong
      000286 F1               [10]  611 	pop	af
      000287 F1               [10]  612 	pop	af
      000288 F1               [10]  613 	pop	af
      000289 F1               [10]  614 	pop	af
      00028A DD 75 F2         [19]  615 	ld	-14 (ix), l
      00028D DD 74 F3         [19]  616 	ld	-13 (ix), h
      000290 DD 73 F4         [19]  617 	ld	-12 (ix), e
      000293 DD 72 F5         [19]  618 	ld	-11 (ix), d
      000296 DD 7E FC         [19]  619 	ld	a, -4 (ix)
      000299 DD 77 F6         [19]  620 	ld	-10 (ix), a
      00029C DD 7E FD         [19]  621 	ld	a, -3 (ix)
      00029F DD 77 F7         [19]  622 	ld	-9 (ix), a
      0002A2 AF               [ 4]  623 	xor	a, a
      0002A3 DD 77 F8         [19]  624 	ld	-8 (ix), a
      0002A6 DD 77 F9         [19]  625 	ld	-7 (ix), a
      0002A9 DD 7E F2         [19]  626 	ld	a, -14 (ix)
      0002AC DD 86 F6         [19]  627 	add	a, -10 (ix)
      0002AF DD 77 FA         [19]  628 	ld	-6 (ix), a
      0002B2 DD 7E F3         [19]  629 	ld	a, -13 (ix)
      0002B5 DD 8E F7         [19]  630 	adc	a, -9 (ix)
      0002B8 DD 77 FB         [19]  631 	ld	-5 (ix), a
      0002BB DD 7E F4         [19]  632 	ld	a, -12 (ix)
      0002BE DD 8E F8         [19]  633 	adc	a, -8 (ix)
      0002C1 DD 77 FC         [19]  634 	ld	-4 (ix), a
      0002C4 DD 7E F5         [19]  635 	ld	a, -11 (ix)
      0002C7 DD 8E F9         [19]  636 	adc	a, -7 (ix)
      0002CA DD 77 FD         [19]  637 	ld	-3 (ix), a
      0002CD 21 09 00         [10]  638 	ld	hl, #9
      0002D0 39               [11]  639 	add	hl, sp
      0002D1 EB               [ 4]  640 	ex	de, hl
      0002D2 21 0E 00         [10]  641 	ld	hl, #14
      0002D5 39               [11]  642 	add	hl, sp
      0002D6 01 04 00         [10]  643 	ld	bc, #4
      0002D9 ED B0            [21]  644 	ldir
                           0002DB   645 	C$stdlib.c$128$4_0$71	= .
                                    646 	.globl	C$stdlib.c$128$4_0$71
                                    647 ;stdlib.c:128: any_digits = 1;
      0002DB DD 36 F3 01      [19]  648 	ld	-13 (ix), #0x01
      0002DF DD 36 F4 00      [19]  649 	ld	-12 (ix), #0
                           0002E3   650 	C$stdlib.c$120$3_0$70	= .
                                    651 	.globl	C$stdlib.c$120$3_0$70
                                    652 ;stdlib.c:120: for (;; p += 1)
      0002E3 DD 34 FE         [23]  653 	inc	-2 (ix)
      0002E6 C2r40r02         [10]  654 	jp	NZ,00149$
      0002E9 DD 34 FF         [23]  655 	inc	-1 (ix)
      0002EC C3r40r02         [10]  656 	jp	00149$
      0002EF                        657 00138$:
                           0002EF   658 	C$stdlib.c$131$1_0$57	= .
                                    659 	.globl	C$stdlib.c$131$1_0$57
                                    660 ;stdlib.c:131: else if (base == 16)
      0002EF DD 7E 08         [19]  661 	ld	a, 8 (ix)
      0002F2 D6 10            [ 7]  662 	sub	a, #0x10
      0002F4 DD B6 09         [19]  663 	or	a, 9 (ix)
      0002F7 C2rDBr03         [10]  664 	jp	NZ,00174$
      0002FA                        665 00151$:
                           0002FA   666 	C$stdlib.c$135$4_0$75	= .
                                    667 	.globl	C$stdlib.c$135$4_0$75
                                    668 ;stdlib.c:135: digit = *p - '0';
      0002FA DD 6E FE         [19]  669 	ld	l, -2 (ix)
      0002FD DD 66 FF         [19]  670 	ld	h, -1 (ix)
      000300 7E               [ 7]  671 	ld	a, (hl)
      000301 DD 77 FD         [19]  672 	ld	-3 (ix), a
      000304 DD 77 FC         [19]  673 	ld	-4 (ix), a
      000307 DD 36 FD 00      [19]  674 	ld	-3 (ix), #0x00
      00030B DD 7E FC         [19]  675 	ld	a, -4 (ix)
      00030E C6 D0            [ 7]  676 	add	a, #0xd0
      000310 DD 77 FA         [19]  677 	ld	-6 (ix), a
      000313 DD 7E FD         [19]  678 	ld	a, -3 (ix)
      000316 CE FF            [ 7]  679 	adc	a, #0xff
      000318 DD 77 FB         [19]  680 	ld	-5 (ix), a
                           00031B   681 	C$stdlib.c$136$4_0$75	= .
                                    682 	.globl	C$stdlib.c$136$4_0$75
                                    683 ;stdlib.c:136: if (digit > ('z' - '0'))
      00031B 3E 4A            [ 7]  684 	ld	a, #0x4a
      00031D DD BE FA         [19]  685 	cp	a, -6 (ix)
      000320 3E 00            [ 7]  686 	ld	a, #0x00
      000322 DD 9E FB         [19]  687 	sbc	a, -5 (ix)
      000325 DArE2r04         [10]  688 	jp	C, 00180$
                           000328   689 	C$stdlib.c$140$4_0$75	= .
                                    690 	.globl	C$stdlib.c$140$4_0$75
                                    691 ;stdlib.c:140: digit = _cvt_in[digit];
      000328 3Er20            [ 7]  692 	ld	a, #<(__cvt_in)
      00032A DD 86 FA         [19]  693 	add	a, -6 (ix)
      00032D DD 77 FC         [19]  694 	ld	-4 (ix), a
      000330 3Es05            [ 7]  695 	ld	a, #>(__cvt_in)
      000332 DD 8E FB         [19]  696 	adc	a, -5 (ix)
      000335 DD 77 FD         [19]  697 	ld	-3 (ix), a
      000338 DD 6E FC         [19]  698 	ld	l, -4 (ix)
      00033B DD 66 FD         [19]  699 	ld	h, -3 (ix)
      00033E 7E               [ 7]  700 	ld	a, (hl)
      00033F DD 77 FD         [19]  701 	ld	-3 (ix), a
      000342 DD 77 FC         [19]  702 	ld	-4 (ix), a
      000345 DD 36 FD 00      [19]  703 	ld	-3 (ix), #0x00
                           000349   704 	C$stdlib.c$141$4_0$75	= .
                                    705 	.globl	C$stdlib.c$141$4_0$75
                                    706 ;stdlib.c:141: if (digit > 15)
      000349 3E 0F            [ 7]  707 	ld	a, #0x0f
      00034B DD BE FC         [19]  708 	cp	a, -4 (ix)
      00034E 3E 00            [ 7]  709 	ld	a, #0x00
      000350 DD 9E FD         [19]  710 	sbc	a, -3 (ix)
      000353 DArE2r04         [10]  711 	jp	C, 00180$
                           000356   712 	C$stdlib.c$145$4_0$75	= .
                                    713 	.globl	C$stdlib.c$145$4_0$75
                                    714 ;stdlib.c:145: result = (result << 4) + digit;
      000356 DD 7E F5         [19]  715 	ld	a, -11 (ix)
      000359 DD 77 EC         [19]  716 	ld	-20 (ix), a
      00035C DD 7E F6         [19]  717 	ld	a, -10 (ix)
      00035F DD 77 ED         [19]  718 	ld	-19 (ix), a
      000362 DD 7E F7         [19]  719 	ld	a, -9 (ix)
      000365 DD 77 EE         [19]  720 	ld	-18 (ix), a
      000368 DD 7E F8         [19]  721 	ld	a, -8 (ix)
      00036B DD 77 EF         [19]  722 	ld	-17 (ix), a
      00036E 06 04            [ 7]  723 	ld	b, #0x04
      000370                        724 00294$:
      000370 DD CB EC 26      [23]  725 	sla	-20 (ix)
      000374 DD CB ED 16      [23]  726 	rl	-19 (ix)
      000378 DD CB EE 16      [23]  727 	rl	-18 (ix)
      00037C DD CB EF 16      [23]  728 	rl	-17 (ix)
      000380 10 EE            [13]  729 	djnz	00294$
      000382 DD 7E FC         [19]  730 	ld	a, -4 (ix)
      000385 DD 77 F6         [19]  731 	ld	-10 (ix), a
      000388 DD 7E FD         [19]  732 	ld	a, -3 (ix)
      00038B DD 77 F7         [19]  733 	ld	-9 (ix), a
      00038E AF               [ 4]  734 	xor	a, a
      00038F DD 77 F8         [19]  735 	ld	-8 (ix), a
      000392 DD 77 F9         [19]  736 	ld	-7 (ix), a
      000395 DD 7E EC         [19]  737 	ld	a, -20 (ix)
      000398 DD 86 F6         [19]  738 	add	a, -10 (ix)
      00039B DD 77 FA         [19]  739 	ld	-6 (ix), a
      00039E DD 7E ED         [19]  740 	ld	a, -19 (ix)
      0003A1 DD 8E F7         [19]  741 	adc	a, -9 (ix)
      0003A4 DD 77 FB         [19]  742 	ld	-5 (ix), a
      0003A7 DD 7E EE         [19]  743 	ld	a, -18 (ix)
      0003AA DD 8E F8         [19]  744 	adc	a, -8 (ix)
      0003AD DD 77 FC         [19]  745 	ld	-4 (ix), a
      0003B0 DD 7E EF         [19]  746 	ld	a, -17 (ix)
      0003B3 DD 8E F9         [19]  747 	adc	a, -7 (ix)
      0003B6 DD 77 FD         [19]  748 	ld	-3 (ix), a
      0003B9 21 09 00         [10]  749 	ld	hl, #9
      0003BC 39               [11]  750 	add	hl, sp
      0003BD EB               [ 4]  751 	ex	de, hl
      0003BE 21 0E 00         [10]  752 	ld	hl, #14
      0003C1 39               [11]  753 	add	hl, sp
      0003C2 01 04 00         [10]  754 	ld	bc, #4
      0003C5 ED B0            [21]  755 	ldir
                           0003C7   756 	C$stdlib.c$146$4_0$75	= .
                                    757 	.globl	C$stdlib.c$146$4_0$75
                                    758 ;stdlib.c:146: any_digits = 1;
      0003C7 DD 36 F3 01      [19]  759 	ld	-13 (ix), #0x01
      0003CB DD 36 F4 00      [19]  760 	ld	-12 (ix), #0
                           0003CF   761 	C$stdlib.c$133$3_0$74	= .
                                    762 	.globl	C$stdlib.c$133$3_0$74
                                    763 ;stdlib.c:133: for (;; p += 1)
      0003CF DD 34 FE         [23]  764 	inc	-2 (ix)
      0003D2 C2rFAr02         [10]  765 	jp	NZ,00151$
      0003D5 DD 34 FF         [23]  766 	inc	-1 (ix)
      0003D8 C3rFAr02         [10]  767 	jp	00151$
      0003DB                        768 00174$:
      0003DB                        769 00153$:
                           0003DB   770 	C$stdlib.c$153$4_0$80	= .
                                    771 	.globl	C$stdlib.c$153$4_0$80
                                    772 ;stdlib.c:153: digit = *p - '0';
      0003DB DD 6E FE         [19]  773 	ld	l, -2 (ix)
      0003DE DD 66 FF         [19]  774 	ld	h, -1 (ix)
      0003E1 7E               [ 7]  775 	ld	a, (hl)
      0003E2 DD 77 FD         [19]  776 	ld	-3 (ix), a
      0003E5 DD 77 FC         [19]  777 	ld	-4 (ix), a
      0003E8 DD 36 FD 00      [19]  778 	ld	-3 (ix), #0x00
      0003EC DD 7E FC         [19]  779 	ld	a, -4 (ix)
      0003EF C6 D0            [ 7]  780 	add	a, #0xd0
      0003F1 DD 77 FA         [19]  781 	ld	-6 (ix), a
      0003F4 DD 7E FD         [19]  782 	ld	a, -3 (ix)
      0003F7 CE FF            [ 7]  783 	adc	a, #0xff
      0003F9 DD 77 FB         [19]  784 	ld	-5 (ix), a
                           0003FC   785 	C$stdlib.c$154$4_0$80	= .
                                    786 	.globl	C$stdlib.c$154$4_0$80
                                    787 ;stdlib.c:154: if (digit > ('z' - '0'))
      0003FC 3E 4A            [ 7]  788 	ld	a, #0x4a
      0003FE DD BE FA         [19]  789 	cp	a, -6 (ix)
      000401 3E 00            [ 7]  790 	ld	a, #0x00
      000403 DD 9E FB         [19]  791 	sbc	a, -5 (ix)
      000406 DArEAr04         [10]  792 	jp	C, 00181$
                           000409   793 	C$stdlib.c$158$4_0$80	= .
                                    794 	.globl	C$stdlib.c$158$4_0$80
                                    795 ;stdlib.c:158: digit = _cvt_in[digit];
      000409 3Er20            [ 7]  796 	ld	a, #<(__cvt_in)
      00040B DD 86 FA         [19]  797 	add	a, -6 (ix)
      00040E DD 77 FC         [19]  798 	ld	-4 (ix), a
      000411 3Es05            [ 7]  799 	ld	a, #>(__cvt_in)
      000413 DD 8E FB         [19]  800 	adc	a, -5 (ix)
      000416 DD 77 FD         [19]  801 	ld	-3 (ix), a
      000419 DD 6E FC         [19]  802 	ld	l, -4 (ix)
      00041C DD 66 FD         [19]  803 	ld	h, -3 (ix)
      00041F 7E               [ 7]  804 	ld	a, (hl)
      000420 DD 77 FD         [19]  805 	ld	-3 (ix), a
      000423 DD 77 FC         [19]  806 	ld	-4 (ix), a
      000426 DD 36 FD 00      [19]  807 	ld	-3 (ix), #0x00
                           00042A   808 	C$stdlib.c$159$4_0$80	= .
                                    809 	.globl	C$stdlib.c$159$4_0$80
                                    810 ;stdlib.c:159: if (digit >= base)
      00042A DD 7E 08         [19]  811 	ld	a, 8 (ix)
      00042D DD 77 FA         [19]  812 	ld	-6 (ix), a
      000430 DD 7E 09         [19]  813 	ld	a, 9 (ix)
      000433 DD 77 FB         [19]  814 	ld	-5 (ix), a
      000436 DD 7E FC         [19]  815 	ld	a, -4 (ix)
      000439 DD 96 FA         [19]  816 	sub	a, -6 (ix)
      00043C DD 7E FD         [19]  817 	ld	a, -3 (ix)
      00043F DD 9E FB         [19]  818 	sbc	a, -5 (ix)
      000442 D2rEAr04         [10]  819 	jp	NC, 00181$
                           000445   820 	C$stdlib.c$163$4_0$80	= .
                                    821 	.globl	C$stdlib.c$163$4_0$80
                                    822 ;stdlib.c:163: result = result * base + digit;
      000445 DD 7E 08         [19]  823 	ld	a, 8 (ix)
      000448 DD 77 EC         [19]  824 	ld	-20 (ix), a
      00044B DD 7E 09         [19]  825 	ld	a, 9 (ix)
      00044E DD 77 ED         [19]  826 	ld	-19 (ix), a
      000451 07               [ 4]  827 	rlca
      000452 9F               [ 4]  828 	sbc	a, a
      000453 DD 77 EE         [19]  829 	ld	-18 (ix), a
      000456 DD 77 EF         [19]  830 	ld	-17 (ix), a
      000459 D1               [10]  831 	pop	de
      00045A E1               [10]  832 	pop	hl
      00045B EB               [ 4]  833 	ex	de, hl
      00045C D5               [11]  834 	push	de
      00045D E5               [11]  835 	push	hl
      00045E D5               [11]  836 	push	de
      00045F E5               [11]  837 	push	hl
      000460 DD 6E F7         [19]  838 	ld	l, -9 (ix)
                                    839 ;	spillPairReg hl
                                    840 ;	spillPairReg hl
      000463 DD 66 F8         [19]  841 	ld	h, -8 (ix)
                                    842 ;	spillPairReg hl
                                    843 ;	spillPairReg hl
      000466 E5               [11]  844 	push	hl
      000467 DD 6E F5         [19]  845 	ld	l, -11 (ix)
                                    846 ;	spillPairReg hl
                                    847 ;	spillPairReg hl
      00046A DD 66 F6         [19]  848 	ld	h, -10 (ix)
                                    849 ;	spillPairReg hl
                                    850 ;	spillPairReg hl
      00046D E5               [11]  851 	push	hl
      00046E CDr00r00         [17]  852 	call	__mullong
      000471 F1               [10]  853 	pop	af
      000472 F1               [10]  854 	pop	af
      000473 F1               [10]  855 	pop	af
      000474 F1               [10]  856 	pop	af
      000475 DD 75 F2         [19]  857 	ld	-14 (ix), l
      000478 DD 74 F3         [19]  858 	ld	-13 (ix), h
      00047B DD 73 F4         [19]  859 	ld	-12 (ix), e
      00047E DD 72 F5         [19]  860 	ld	-11 (ix), d
      000481 DD 7E FC         [19]  861 	ld	a, -4 (ix)
      000484 DD 77 F6         [19]  862 	ld	-10 (ix), a
      000487 DD 7E FD         [19]  863 	ld	a, -3 (ix)
      00048A DD 77 F7         [19]  864 	ld	-9 (ix), a
      00048D AF               [ 4]  865 	xor	a, a
      00048E DD 77 F8         [19]  866 	ld	-8 (ix), a
      000491 DD 77 F9         [19]  867 	ld	-7 (ix), a
      000494 DD 7E F2         [19]  868 	ld	a, -14 (ix)
      000497 DD 86 F6         [19]  869 	add	a, -10 (ix)
      00049A DD 77 FA         [19]  870 	ld	-6 (ix), a
      00049D DD 7E F3         [19]  871 	ld	a, -13 (ix)
      0004A0 DD 8E F7         [19]  872 	adc	a, -9 (ix)
      0004A3 DD 77 FB         [19]  873 	ld	-5 (ix), a
      0004A6 DD 7E F4         [19]  874 	ld	a, -12 (ix)
      0004A9 DD 8E F8         [19]  875 	adc	a, -8 (ix)
      0004AC DD 77 FC         [19]  876 	ld	-4 (ix), a
      0004AF DD 7E F5         [19]  877 	ld	a, -11 (ix)
      0004B2 DD 8E F9         [19]  878 	adc	a, -7 (ix)
      0004B5 DD 77 FD         [19]  879 	ld	-3 (ix), a
      0004B8 21 09 00         [10]  880 	ld	hl, #9
      0004BB 39               [11]  881 	add	hl, sp
      0004BC EB               [ 4]  882 	ex	de, hl
      0004BD 21 0E 00         [10]  883 	ld	hl, #14
      0004C0 39               [11]  884 	add	hl, sp
      0004C1 01 04 00         [10]  885 	ld	bc, #4
      0004C4 ED B0            [21]  886 	ldir
                           0004C6   887 	C$stdlib.c$164$4_0$80	= .
                                    888 	.globl	C$stdlib.c$164$4_0$80
                                    889 ;stdlib.c:164: any_digits = 1;
      0004C6 DD 36 F3 01      [19]  890 	ld	-13 (ix), #0x01
      0004CA DD 36 F4 00      [19]  891 	ld	-12 (ix), #0
                           0004CE   892 	C$stdlib.c$151$3_0$79	= .
                                    893 	.globl	C$stdlib.c$151$3_0$79
                                    894 ;stdlib.c:151: for (;; p += 1)
      0004CE DD 34 FE         [23]  895 	inc	-2 (ix)
      0004D1 C2rDBr03         [10]  896 	jp	NZ,00153$
      0004D4 DD 34 FF         [23]  897 	inc	-1 (ix)
                           0004D7   898 	C$stdlib.c$172$1_0$57	= .
                                    899 	.globl	C$stdlib.c$172$1_0$57
                                    900 ;stdlib.c:172: return result;
      0004D7 C3rDBr03         [10]  901 	jp	00153$
                           0004DA   902 	C$stdlib.c$151$1_0$57	= .
                                    903 	.globl	C$stdlib.c$151$1_0$57
                                    904 ;stdlib.c:151: for (;; p += 1)
      0004DA                        905 00179$:
      0004DA DD 5E FE         [19]  906 	ld	e, -2 (ix)
      0004DD DD 56 FF         [19]  907 	ld	d, -1 (ix)
                           0004E0   908 	C$stdlib.c$172$1_0$57	= .
                                    909 	.globl	C$stdlib.c$172$1_0$57
                                    910 ;stdlib.c:172: return result;
      0004E0 18 0E            [12]  911 	jr	00142$
                           0004E2   912 	C$stdlib.c$151$1_0$57	= .
                                    913 	.globl	C$stdlib.c$151$1_0$57
                                    914 ;stdlib.c:151: for (;; p += 1)
      0004E2                        915 00180$:
      0004E2 DD 5E FE         [19]  916 	ld	e, -2 (ix)
      0004E5 DD 56 FF         [19]  917 	ld	d, -1 (ix)
                           0004E8   918 	C$stdlib.c$172$1_0$57	= .
                                    919 	.globl	C$stdlib.c$172$1_0$57
                                    920 ;stdlib.c:172: return result;
      0004E8 18 06            [12]  921 	jr	00142$
                           0004EA   922 	C$stdlib.c$151$1_0$57	= .
                                    923 	.globl	C$stdlib.c$151$1_0$57
                                    924 ;stdlib.c:151: for (;; p += 1)
      0004EA                        925 00181$:
      0004EA DD 5E FE         [19]  926 	ld	e, -2 (ix)
      0004ED DD 56 FF         [19]  927 	ld	d, -1 (ix)
      0004F0                        928 00142$:
                           0004F0   929 	C$stdlib.c$168$1_0$57	= .
                                    930 	.globl	C$stdlib.c$168$1_0$57
                                    931 ;stdlib.c:168: if (!any_digits)
      0004F0 DD 7E F4         [19]  932 	ld	a, -12 (ix)
      0004F3 DD B6 F3         [19]  933 	or	a, -13 (ix)
      0004F6 20 06            [12]  934 	jr	NZ, 00144$
                           0004F8   935 	C$stdlib.c$169$1_0$57	= .
                                    936 	.globl	C$stdlib.c$169$1_0$57
                                    937 ;stdlib.c:169: p = string;
      0004F8 DD 5E F0         [19]  938 	ld	e, -16 (ix)
      0004FB DD 56 F1         [19]  939 	ld	d, -15 (ix)
      0004FE                        940 00144$:
                           0004FE   941 	C$stdlib.c$170$1_0$57	= .
                                    942 	.globl	C$stdlib.c$170$1_0$57
                                    943 ;stdlib.c:170: if (end_ptr != 0)
      0004FE DD 7E 07         [19]  944 	ld	a, 7 (ix)
      000501 DD B6 06         [19]  945 	or	a, 6 (ix)
      000504 28 09            [12]  946 	jr	Z, 00146$
                           000506   947 	C$stdlib.c$171$1_0$57	= .
                                    948 	.globl	C$stdlib.c$171$1_0$57
                                    949 ;stdlib.c:171: *end_ptr = p;
      000506 DD 6E 06         [19]  950 	ld	l, 6 (ix)
                                    951 ;	spillPairReg hl
                                    952 ;	spillPairReg hl
      000509 DD 66 07         [19]  953 	ld	h, 7 (ix)
                                    954 ;	spillPairReg hl
                                    955 ;	spillPairReg hl
      00050C 73               [ 7]  956 	ld	(hl), e
      00050D 23               [ 6]  957 	inc	hl
      00050E 72               [ 7]  958 	ld	(hl), d
      00050F                        959 00146$:
                           00050F   960 	C$stdlib.c$172$1_0$57	= .
                                    961 	.globl	C$stdlib.c$172$1_0$57
                                    962 ;stdlib.c:172: return result;
      00050F DD 6E F5         [19]  963 	ld	l, -11 (ix)
                                    964 ;	spillPairReg hl
                                    965 ;	spillPairReg hl
      000512 DD 66 F6         [19]  966 	ld	h, -10 (ix)
                                    967 ;	spillPairReg hl
                                    968 ;	spillPairReg hl
      000515 DD 5E F7         [19]  969 	ld	e, -9 (ix)
      000518 DD 56 F8         [19]  970 	ld	d, -8 (ix)
                           00051B   971 	C$stdlib.c$173$1_0$57	= .
                                    972 	.globl	C$stdlib.c$173$1_0$57
                                    973 ;stdlib.c:173: }
      00051B DD F9            [10]  974 	ld	sp, ix
      00051D DD E1            [14]  975 	pop	ix
                           00051F   976 	C$stdlib.c$173$1_0$57	= .
                                    977 	.globl	C$stdlib.c$173$1_0$57
                           00051F   978 	XG$strtoul$0$0	= .
                                    979 	.globl	XG$strtoul$0$0
      00051F C9               [10]  980 	ret
                           000520   981 Fstdlib$_cvt_in$0_0$0 == .
      000520                        982 __cvt_in:
      000520 00                     983 	.db #0x00	; 0
      000521 01                     984 	.db #0x01	; 1
      000522 02                     985 	.db #0x02	; 2
      000523 03                     986 	.db #0x03	; 3
      000524 04                     987 	.db #0x04	; 4
      000525 05                     988 	.db #0x05	; 5
      000526 06                     989 	.db #0x06	; 6
      000527 07                     990 	.db #0x07	; 7
      000528 08                     991 	.db #0x08	; 8
      000529 09                     992 	.db #0x09	; 9
      00052A 64                     993 	.db #0x64	; 100	'd'
      00052B 64                     994 	.db #0x64	; 100	'd'
      00052C 64                     995 	.db #0x64	; 100	'd'
      00052D 64                     996 	.db #0x64	; 100	'd'
      00052E 64                     997 	.db #0x64	; 100	'd'
      00052F 64                     998 	.db #0x64	; 100	'd'
      000530 64                     999 	.db #0x64	; 100	'd'
      000531 0A                    1000 	.db #0x0a	; 10
      000532 0B                    1001 	.db #0x0b	; 11
      000533 0C                    1002 	.db #0x0c	; 12
      000534 0D                    1003 	.db #0x0d	; 13
      000535 0E                    1004 	.db #0x0e	; 14
      000536 0F                    1005 	.db #0x0f	; 15
      000537 10                    1006 	.db #0x10	; 16
      000538 11                    1007 	.db #0x11	; 17
      000539 12                    1008 	.db #0x12	; 18
      00053A 13                    1009 	.db #0x13	; 19
      00053B 14                    1010 	.db #0x14	; 20
      00053C 15                    1011 	.db #0x15	; 21
      00053D 16                    1012 	.db #0x16	; 22
      00053E 17                    1013 	.db #0x17	; 23
      00053F 18                    1014 	.db #0x18	; 24
      000540 19                    1015 	.db #0x19	; 25
      000541 1A                    1016 	.db #0x1a	; 26
      000542 1B                    1017 	.db #0x1b	; 27
      000543 1C                    1018 	.db #0x1c	; 28
      000544 1D                    1019 	.db #0x1d	; 29
      000545 1E                    1020 	.db #0x1e	; 30
      000546 1F                    1021 	.db #0x1f	; 31
      000547 20                    1022 	.db #0x20	; 32
      000548 21                    1023 	.db #0x21	; 33
      000549 22                    1024 	.db #0x22	; 34
      00054A 23                    1025 	.db #0x23	; 35
      00054B 64                    1026 	.db #0x64	; 100	'd'
      00054C 64                    1027 	.db #0x64	; 100	'd'
      00054D 64                    1028 	.db #0x64	; 100	'd'
      00054E 64                    1029 	.db #0x64	; 100	'd'
      00054F 64                    1030 	.db #0x64	; 100	'd'
      000550 64                    1031 	.db #0x64	; 100	'd'
      000551 0A                    1032 	.db #0x0a	; 10
      000552 0B                    1033 	.db #0x0b	; 11
      000553 0C                    1034 	.db #0x0c	; 12
      000554 0D                    1035 	.db #0x0d	; 13
      000555 0E                    1036 	.db #0x0e	; 14
      000556 0F                    1037 	.db #0x0f	; 15
      000557 10                    1038 	.db #0x10	; 16
      000558 11                    1039 	.db #0x11	; 17
      000559 12                    1040 	.db #0x12	; 18
      00055A 13                    1041 	.db #0x13	; 19
      00055B 14                    1042 	.db #0x14	; 20
      00055C 15                    1043 	.db #0x15	; 21
      00055D 16                    1044 	.db #0x16	; 22
      00055E 17                    1045 	.db #0x17	; 23
      00055F 18                    1046 	.db #0x18	; 24
      000560 19                    1047 	.db #0x19	; 25
      000561 1A                    1048 	.db #0x1a	; 26
      000562 1B                    1049 	.db #0x1b	; 27
      000563 1C                    1050 	.db #0x1c	; 28
      000564 1D                    1051 	.db #0x1d	; 29
      000565 1E                    1052 	.db #0x1e	; 30
      000566 1F                    1053 	.db #0x1f	; 31
      000567 20                    1054 	.db #0x20	; 32
      000568 21                    1055 	.db #0x21	; 33
      000569 22                    1056 	.db #0x22	; 34
      00056A 23                    1057 	.db #0x23	; 35
                           00056B  1058 	G$strtol$0$0	= .
                                   1059 	.globl	G$strtol$0$0
                           00056B  1060 	C$stdlib.c$175$1_0$84	= .
                                   1061 	.globl	C$stdlib.c$175$1_0$84
                                   1062 ;stdlib.c:175: long strtol(char *nptr, char **endptr, int base)
                                   1063 ;	---------------------------------
                                   1064 ; Function strtol
                                   1065 ; ---------------------------------
      00056B                       1066 _strtol::
      00056B DD E5            [15] 1067 	push	ix
      00056D DD 21 00 00      [14] 1068 	ld	ix,#0
      000571 DD 39            [15] 1069 	add	ix,sp
      000573 21 F6 FF         [10] 1070 	ld	hl, #-10
      000576 39               [11] 1071 	add	hl, sp
      000577 F9               [ 6] 1072 	ld	sp, hl
                           000578  1073 	C$stdlib.c$178$2_0$84	= .
                                   1074 	.globl	C$stdlib.c$178$2_0$84
                                   1075 ;stdlib.c:178: char *p = nptr;
      000578 DD 4E 04         [19] 1076 	ld	c, 4 (ix)
      00057B DD 46 05         [19] 1077 	ld	b, 5 (ix)
                           00057E  1078 	C$stdlib.c$179$1_0$84	= .
                                   1079 	.globl	C$stdlib.c$179$1_0$84
                                   1080 ;stdlib.c:179: while (isspace(*p))
      00057E                       1081 00101$:
      00057E 0A               [ 7] 1082 	ld	a, (bc)
      00057F 16 00            [ 7] 1083 	ld	d, #0x00
      000581 C5               [11] 1084 	push	bc
      000582 5F               [ 4] 1085 	ld	e, a
      000583 D5               [11] 1086 	push	de
      000584 CDr00r00         [17] 1087 	call	_isspace
      000587 F1               [10] 1088 	pop	af
      000588 EB               [ 4] 1089 	ex	de, hl
      000589 C1               [10] 1090 	pop	bc
                           00058A  1091 	C$stdlib.c$181$1_0$84	= .
                                   1092 	.globl	C$stdlib.c$181$1_0$84
                                   1093 ;stdlib.c:181: p++;
      00058A 69               [ 4] 1094 	ld	l, c
      00058B 60               [ 4] 1095 	ld	h, b
      00058C 23               [ 6] 1096 	inc	hl
      00058D DD 75 FD         [19] 1097 	ld	-3 (ix), l
      000590 DD 74 FE         [19] 1098 	ld	-2 (ix), h
                           000593  1099 	C$stdlib.c$179$1_0$84	= .
                                   1100 	.globl	C$stdlib.c$179$1_0$84
                                   1101 ;stdlib.c:179: while (isspace(*p))
      000593 7A               [ 4] 1102 	ld	a, d
      000594 B3               [ 4] 1103 	or	a, e
      000595 28 08            [12] 1104 	jr	Z, 00120$
                           000597  1105 	C$stdlib.c$181$2_0$85	= .
                                   1106 	.globl	C$stdlib.c$181$2_0$85
                                   1107 ;stdlib.c:181: p++;
      000597 DD 4E FD         [19] 1108 	ld	c, -3 (ix)
      00059A DD 46 FE         [19] 1109 	ld	b, -2 (ix)
      00059D 18 DF            [12] 1110 	jr	00101$
      00059F                       1111 00120$:
      00059F DD 71 FA         [19] 1112 	ld	-6 (ix), c
      0005A2 DD 70 FB         [19] 1113 	ld	-5 (ix), b
                           0005A5  1114 	C$stdlib.c$183$1_0$84	= .
                                   1115 	.globl	C$stdlib.c$183$1_0$84
                                   1116 ;stdlib.c:183: if (*p == '-')
      0005A5 0A               [ 7] 1117 	ld	a, (bc)
      0005A6 DD 77 FF         [19] 1118 	ld	-1 (ix), a
      0005A9 D6 2D            [ 7] 1119 	sub	a, #0x2d
      0005AB 20 4E            [12] 1120 	jr	NZ, 00107$
                           0005AD  1121 	C$stdlib.c$185$2_0$86	= .
                                   1122 	.globl	C$stdlib.c$185$2_0$86
                                   1123 ;stdlib.c:185: p++;
      0005AD DD 7E FD         [19] 1124 	ld	a, -3 (ix)
      0005B0 DD 77 FA         [19] 1125 	ld	-6 (ix), a
      0005B3 DD 7E FE         [19] 1126 	ld	a, -2 (ix)
      0005B6 DD 77 FB         [19] 1127 	ld	-5 (ix), a
                           0005B9  1128 	C$stdlib.c$186$2_0$86	= .
                                   1129 	.globl	C$stdlib.c$186$2_0$86
                                   1130 ;stdlib.c:186: result = -strtoul(p, endptr, base);
      0005B9 DD 6E 08         [19] 1131 	ld	l, 8 (ix)
                                   1132 ;	spillPairReg hl
                                   1133 ;	spillPairReg hl
      0005BC DD 66 09         [19] 1134 	ld	h, 9 (ix)
                                   1135 ;	spillPairReg hl
                                   1136 ;	spillPairReg hl
      0005BF E5               [11] 1137 	push	hl
      0005C0 DD 6E 06         [19] 1138 	ld	l, 6 (ix)
                                   1139 ;	spillPairReg hl
                                   1140 ;	spillPairReg hl
      0005C3 DD 66 07         [19] 1141 	ld	h, 7 (ix)
                                   1142 ;	spillPairReg hl
                                   1143 ;	spillPairReg hl
      0005C6 E5               [11] 1144 	push	hl
      0005C7 DD 6E FA         [19] 1145 	ld	l, -6 (ix)
                                   1146 ;	spillPairReg hl
                                   1147 ;	spillPairReg hl
      0005CA DD 66 FB         [19] 1148 	ld	h, -5 (ix)
                                   1149 ;	spillPairReg hl
                                   1150 ;	spillPairReg hl
      0005CD E5               [11] 1151 	push	hl
      0005CE CDrBBr00         [17] 1152 	call	_strtoul
      0005D1 F1               [10] 1153 	pop	af
      0005D2 F1               [10] 1154 	pop	af
      0005D3 F1               [10] 1155 	pop	af
      0005D4 E3               [19] 1156 	ex	(sp), hl
      0005D5 DD 73 F8         [19] 1157 	ld	-8 (ix), e
      0005D8 DD 72 F9         [19] 1158 	ld	-7 (ix), d
      0005DB AF               [ 4] 1159 	xor	a, a
      0005DC DD 96 F6         [19] 1160 	sub	a, -10 (ix)
      0005DF DD 77 FC         [19] 1161 	ld	-4 (ix), a
      0005E2 3E 00            [ 7] 1162 	ld	a, #0x00
      0005E4 DD 9E F7         [19] 1163 	sbc	a, -9 (ix)
      0005E7 DD 77 FD         [19] 1164 	ld	-3 (ix), a
      0005EA 3E 00            [ 7] 1165 	ld	a, #0x00
      0005EC DD 9E F8         [19] 1166 	sbc	a, -8 (ix)
      0005EF DD 77 FE         [19] 1167 	ld	-2 (ix), a
      0005F2 9F               [ 4] 1168 	sbc	a, a
      0005F3 DD 96 F9         [19] 1169 	sub	a, -7 (ix)
      0005F6 DD 77 FF         [19] 1170 	ld	-1 (ix), a
      0005F9 18 3A            [12] 1171 	jr	00108$
      0005FB                       1172 00107$:
                           0005FB  1173 	C$stdlib.c$190$2_0$87	= .
                                   1174 	.globl	C$stdlib.c$190$2_0$87
                                   1175 ;stdlib.c:190: if (*p == '+')
      0005FB DD 7E FF         [19] 1176 	ld	a, -1 (ix)
      0005FE D6 2B            [ 7] 1177 	sub	a, #0x2b
      000600 20 0C            [12] 1178 	jr	NZ, 00105$
                           000602  1179 	C$stdlib.c$191$2_0$87	= .
                                   1180 	.globl	C$stdlib.c$191$2_0$87
                                   1181 ;stdlib.c:191: p++;
      000602 DD 7E FD         [19] 1182 	ld	a, -3 (ix)
      000605 DD 77 FA         [19] 1183 	ld	-6 (ix), a
      000608 DD 7E FE         [19] 1184 	ld	a, -2 (ix)
      00060B DD 77 FB         [19] 1185 	ld	-5 (ix), a
      00060E                       1186 00105$:
                           00060E  1187 	C$stdlib.c$192$2_0$87	= .
                                   1188 	.globl	C$stdlib.c$192$2_0$87
                                   1189 ;stdlib.c:192: result = strtoul(p, endptr, base);
      00060E DD 6E 08         [19] 1190 	ld	l, 8 (ix)
                                   1191 ;	spillPairReg hl
                                   1192 ;	spillPairReg hl
      000611 DD 66 09         [19] 1193 	ld	h, 9 (ix)
                                   1194 ;	spillPairReg hl
                                   1195 ;	spillPairReg hl
      000614 E5               [11] 1196 	push	hl
      000615 DD 6E 06         [19] 1197 	ld	l, 6 (ix)
                                   1198 ;	spillPairReg hl
                                   1199 ;	spillPairReg hl
      000618 DD 66 07         [19] 1200 	ld	h, 7 (ix)
                                   1201 ;	spillPairReg hl
                                   1202 ;	spillPairReg hl
      00061B E5               [11] 1203 	push	hl
      00061C DD 6E FA         [19] 1204 	ld	l, -6 (ix)
                                   1205 ;	spillPairReg hl
                                   1206 ;	spillPairReg hl
      00061F DD 66 FB         [19] 1207 	ld	h, -5 (ix)
                                   1208 ;	spillPairReg hl
                                   1209 ;	spillPairReg hl
      000622 E5               [11] 1210 	push	hl
      000623 CDrBBr00         [17] 1211 	call	_strtoul
      000626 F1               [10] 1212 	pop	af
      000627 F1               [10] 1213 	pop	af
      000628 F1               [10] 1214 	pop	af
      000629 DD 75 FC         [19] 1215 	ld	-4 (ix), l
      00062C DD 74 FD         [19] 1216 	ld	-3 (ix), h
      00062F DD 73 FE         [19] 1217 	ld	-2 (ix), e
      000632 DD 72 FF         [19] 1218 	ld	-1 (ix), d
      000635                       1219 00108$:
                           000635  1220 	C$stdlib.c$194$1_0$84	= .
                                   1221 	.globl	C$stdlib.c$194$1_0$84
                                   1222 ;stdlib.c:194: if (endptr != 0 && *endptr == p)
      000635 DD 7E 07         [19] 1223 	ld	a, 7 (ix)
      000638 DD B6 06         [19] 1224 	or	a, 6 (ix)
      00063B 28 1F            [12] 1225 	jr	Z, 00110$
      00063D DD 4E 06         [19] 1226 	ld	c, 6 (ix)
      000640 DD 46 07         [19] 1227 	ld	b, 7 (ix)
      000643 69               [ 4] 1228 	ld	l, c
      000644 60               [ 4] 1229 	ld	h, b
      000645 5E               [ 7] 1230 	ld	e, (hl)
      000646 23               [ 6] 1231 	inc	hl
      000647 56               [ 7] 1232 	ld	d, (hl)
      000648 DD 6E FA         [19] 1233 	ld	l, -6 (ix)
      00064B DD 66 FB         [19] 1234 	ld	h, -5 (ix)
      00064E BF               [ 4] 1235 	cp	a, a
      00064F ED 52            [15] 1236 	sbc	hl, de
      000651 20 09            [12] 1237 	jr	NZ, 00110$
                           000653  1238 	C$stdlib.c$196$2_0$88	= .
                                   1239 	.globl	C$stdlib.c$196$2_0$88
                                   1240 ;stdlib.c:196: *endptr = nptr;
      000653 DD 7E 04         [19] 1241 	ld	a, 4 (ix)
      000656 02               [ 7] 1242 	ld	(bc), a
      000657 03               [ 6] 1243 	inc	bc
      000658 DD 7E 05         [19] 1244 	ld	a, 5 (ix)
      00065B 02               [ 7] 1245 	ld	(bc), a
      00065C                       1246 00110$:
                           00065C  1247 	C$stdlib.c$198$1_0$84	= .
                                   1248 	.globl	C$stdlib.c$198$1_0$84
                                   1249 ;stdlib.c:198: return result;
      00065C DD 6E FC         [19] 1250 	ld	l, -4 (ix)
                                   1251 ;	spillPairReg hl
                                   1252 ;	spillPairReg hl
      00065F DD 66 FD         [19] 1253 	ld	h, -3 (ix)
                                   1254 ;	spillPairReg hl
                                   1255 ;	spillPairReg hl
      000662 DD 5E FE         [19] 1256 	ld	e, -2 (ix)
      000665 DD 56 FF         [19] 1257 	ld	d, -1 (ix)
                           000668  1258 	C$stdlib.c$199$1_0$84	= .
                                   1259 	.globl	C$stdlib.c$199$1_0$84
                                   1260 ;stdlib.c:199: }
      000668 DD F9            [10] 1261 	ld	sp, ix
      00066A DD E1            [14] 1262 	pop	ix
                           00066C  1263 	C$stdlib.c$199$1_0$84	= .
                                   1264 	.globl	C$stdlib.c$199$1_0$84
                           00066C  1265 	XG$strtol$0$0	= .
                                   1266 	.globl	XG$strtol$0$0
      00066C C9               [10] 1267 	ret
                           00066D  1268 	G$malloc$0$0	= .
                                   1269 	.globl	G$malloc$0$0
                           00066D  1270 	C$stdlib.c$201$1_0$90	= .
                                   1271 	.globl	C$stdlib.c$201$1_0$90
                                   1272 ;stdlib.c:201: void *malloc(size_t size)
                                   1273 ;	---------------------------------
                                   1274 ; Function malloc
                                   1275 ; ---------------------------------
      00066D                       1276 _malloc::
      00066D DD E5            [15] 1277 	push	ix
      00066F DD 21 00 00      [14] 1278 	ld	ix,#0
      000673 DD 39            [15] 1279 	add	ix,sp
      000675 F5               [11] 1280 	push	af
                           000676  1281 	C$stdlib.c$208$1_0$90	= .
                                   1282 	.globl	C$stdlib.c$208$1_0$90
                                   1283 ;stdlib.c:208: (list_header_t **)&prev,
      000676 21 00 00         [10] 1284 	ld	hl, #0
      000679 39               [11] 1285 	add	hl, sp
      00067A EB               [ 4] 1286 	ex	de, hl
                           00067B  1287 	C$stdlib.c$207$1_0$90	= .
                                   1288 	.globl	C$stdlib.c$207$1_0$90
                                   1289 ;stdlib.c:207: (list_header_t *)&_heap,
      00067B DD 6E 04         [19] 1290 	ld	l, 4 (ix)
                                   1291 ;	spillPairReg hl
                                   1292 ;	spillPairReg hl
      00067E DD 66 05         [19] 1293 	ld	h, 5 (ix)
                                   1294 ;	spillPairReg hl
                                   1295 ;	spillPairReg hl
      000681 E5               [11] 1296 	push	hl
      000682 21r00r00         [10] 1297 	ld	hl, #__match_free_block
      000685 E5               [11] 1298 	push	hl
      000686 D5               [11] 1299 	push	de
      000687 21r00r00         [10] 1300 	ld	hl, #__heap
      00068A E5               [11] 1301 	push	hl
      00068B CDr00r00         [17] 1302 	call	__list_find
      00068E F1               [10] 1303 	pop	af
      00068F F1               [10] 1304 	pop	af
      000690 F1               [10] 1305 	pop	af
      000691 F1               [10] 1306 	pop	af
      000692 4D               [ 4] 1307 	ld	c, l
      000693 44               [ 4] 1308 	ld	b, h
                           000694  1309 	C$stdlib.c$211$1_0$90	= .
                                   1310 	.globl	C$stdlib.c$211$1_0$90
                                   1311 ;stdlib.c:211: if (b)
      000694 78               [ 4] 1312 	ld	a, b
      000695 B1               [ 4] 1313 	or	a, c
      000696 28 35            [12] 1314 	jr	Z, 00104$
                           000698  1315 	C$stdlib.c$213$2_0$91	= .
                                   1316 	.globl	C$stdlib.c$213$2_0$91
                                   1317 ;stdlib.c:213: if (b->size - size > BLK_SIZE + MIN_CHUNK_SIZE)
      000698 69               [ 4] 1318 	ld	l, c
                                   1319 ;	spillPairReg hl
                                   1320 ;	spillPairReg hl
      000699 60               [ 4] 1321 	ld	h, b
                                   1322 ;	spillPairReg hl
                                   1323 ;	spillPairReg hl
      00069A 23               [ 6] 1324 	inc	hl
      00069B 23               [ 6] 1325 	inc	hl
      00069C 23               [ 6] 1326 	inc	hl
      00069D 5E               [ 7] 1327 	ld	e, (hl)
      00069E 23               [ 6] 1328 	inc	hl
      00069F 56               [ 7] 1329 	ld	d, (hl)
      0006A0 7B               [ 4] 1330 	ld	a, e
      0006A1 DD 96 04         [19] 1331 	sub	a, 4 (ix)
      0006A4 5F               [ 4] 1332 	ld	e, a
      0006A5 7A               [ 4] 1333 	ld	a, d
      0006A6 DD 9E 05         [19] 1334 	sbc	a, 5 (ix)
      0006A9 57               [ 4] 1335 	ld	d, a
      0006AA 3E 09            [ 7] 1336 	ld	a, #0x09
      0006AC BB               [ 4] 1337 	cp	a, e
      0006AD 3E 00            [ 7] 1338 	ld	a, #0x00
      0006AF 9A               [ 4] 1339 	sbc	a, d
      0006B0 30 0F            [12] 1340 	jr	NC, 00102$
                           0006B2  1341 	C$stdlib.c$214$2_0$91	= .
                                   1342 	.globl	C$stdlib.c$214$2_0$91
                                   1343 ;stdlib.c:214: _split(b, size);
      0006B2 C5               [11] 1344 	push	bc
      0006B3 DD 6E 04         [19] 1345 	ld	l, 4 (ix)
                                   1346 ;	spillPairReg hl
                                   1347 ;	spillPairReg hl
      0006B6 DD 66 05         [19] 1348 	ld	h, 5 (ix)
                                   1349 ;	spillPairReg hl
                                   1350 ;	spillPairReg hl
      0006B9 E5               [11] 1351 	push	hl
      0006BA C5               [11] 1352 	push	bc
      0006BB CDr00r00         [17] 1353 	call	__split
      0006BE F1               [10] 1354 	pop	af
      0006BF F1               [10] 1355 	pop	af
      0006C0 C1               [10] 1356 	pop	bc
      0006C1                       1357 00102$:
                           0006C1  1358 	C$stdlib.c$215$2_0$91	= .
                                   1359 	.globl	C$stdlib.c$215$2_0$91
                                   1360 ;stdlib.c:215: b->stat = ALLOCATED;
      0006C1 69               [ 4] 1361 	ld	l, c
                                   1362 ;	spillPairReg hl
                                   1363 ;	spillPairReg hl
      0006C2 60               [ 4] 1364 	ld	h, b
                                   1365 ;	spillPairReg hl
                                   1366 ;	spillPairReg hl
      0006C3 23               [ 6] 1367 	inc	hl
      0006C4 23               [ 6] 1368 	inc	hl
      0006C5 36 01            [10] 1369 	ld	(hl), #0x01
                           0006C7  1370 	C$stdlib.c$216$2_0$91	= .
                                   1371 	.globl	C$stdlib.c$216$2_0$91
                                   1372 ;stdlib.c:216: return b->data;
      0006C7 21 05 00         [10] 1373 	ld	hl, #0x0005
      0006CA 09               [11] 1374 	add	hl, bc
      0006CB 18 03            [12] 1375 	jr	00106$
      0006CD                       1376 00104$:
                           0006CD  1377 	C$stdlib.c$219$1_0$90	= .
                                   1378 	.globl	C$stdlib.c$219$1_0$90
                                   1379 ;stdlib.c:219: return NULL;
      0006CD 21 00 00         [10] 1380 	ld	hl, #0x0000
      0006D0                       1381 00106$:
                           0006D0  1382 	C$stdlib.c$220$1_0$90	= .
                                   1383 	.globl	C$stdlib.c$220$1_0$90
                                   1384 ;stdlib.c:220: }
      0006D0 DD F9            [10] 1385 	ld	sp, ix
      0006D2 DD E1            [14] 1386 	pop	ix
                           0006D4  1387 	C$stdlib.c$220$1_0$90	= .
                                   1388 	.globl	C$stdlib.c$220$1_0$90
                           0006D4  1389 	XG$malloc$0$0	= .
                                   1390 	.globl	XG$malloc$0$0
      0006D4 C9               [10] 1391 	ret
                           0006D5  1392 	G$free$0$0	= .
                                   1393 	.globl	G$free$0$0
                           0006D5  1394 	C$stdlib.c$222$1_0$93	= .
                                   1395 	.globl	C$stdlib.c$222$1_0$93
                                   1396 ;stdlib.c:222: void free(void *p)
                                   1397 ;	---------------------------------
                                   1398 ; Function free
                                   1399 ; ---------------------------------
      0006D5                       1400 _free::
      0006D5 DD E5            [15] 1401 	push	ix
      0006D7 DD 21 00 00      [14] 1402 	ld	ix,#0
      0006DB DD 39            [15] 1403 	add	ix,sp
      0006DD F5               [11] 1404 	push	af
      0006DE F5               [11] 1405 	push	af
                           0006DF  1406 	C$stdlib.c$228$1_0$93	= .
                                   1407 	.globl	C$stdlib.c$228$1_0$93
                                   1408 ;stdlib.c:228: b = (block_t *)((uint16_t)p - BLK_SIZE);
      0006DF DD 7E 04         [19] 1409 	ld	a, 4 (ix)
      0006E2 DD 46 05         [19] 1410 	ld	b, 5 (ix)
      0006E5 C6 FB            [ 7] 1411 	add	a, #0xfb
      0006E7 4F               [ 4] 1412 	ld	c, a
      0006E8 78               [ 4] 1413 	ld	a, b
      0006E9 CE FF            [ 7] 1414 	adc	a, #0xff
      0006EB 47               [ 4] 1415 	ld	b, a
                           0006EC  1416 	C$stdlib.c$231$1_0$93	= .
                                   1417 	.globl	C$stdlib.c$231$1_0$93
                                   1418 ;stdlib.c:231: if (_list_find((list_header_t *)&_heap, (list_header_t **)&prev, _list_match_eq, (uint16_t)b))
      0006EC DD 71 FE         [19] 1419 	ld	-2 (ix), c
      0006EF DD 70 FF         [19] 1420 	ld	-1 (ix), b
      0006F2 21 00 00         [10] 1421 	ld	hl, #0
      0006F5 39               [11] 1422 	add	hl, sp
      0006F6 C5               [11] 1423 	push	bc
      0006F7 EB               [ 4] 1424 	ex	de, hl
      0006F8 DD 6E FE         [19] 1425 	ld	l, -2 (ix)
                                   1426 ;	spillPairReg hl
                                   1427 ;	spillPairReg hl
      0006FB DD 66 FF         [19] 1428 	ld	h, -1 (ix)
                                   1429 ;	spillPairReg hl
                                   1430 ;	spillPairReg hl
      0006FE E5               [11] 1431 	push	hl
      0006FF 21r00r00         [10] 1432 	ld	hl, #__list_match_eq
      000702 E5               [11] 1433 	push	hl
      000703 D5               [11] 1434 	push	de
      000704 21r00r00         [10] 1435 	ld	hl, #__heap
      000707 E5               [11] 1436 	push	hl
      000708 CDr00r00         [17] 1437 	call	__list_find
      00070B F1               [10] 1438 	pop	af
      00070C F1               [10] 1439 	pop	af
      00070D F1               [10] 1440 	pop	af
      00070E F1               [10] 1441 	pop	af
      00070F EB               [ 4] 1442 	ex	de, hl
      000710 C1               [10] 1443 	pop	bc
      000711 7A               [ 4] 1444 	ld	a, d
      000712 B3               [ 4] 1445 	or	a, e
      000713 28 33            [12] 1446 	jr	Z, 00109$
                           000715  1447 	C$stdlib.c$233$2_0$94	= .
                                   1448 	.globl	C$stdlib.c$233$2_0$94
                                   1449 ;stdlib.c:233: b->stat = NEW;
      000715 59               [ 4] 1450 	ld	e, c
      000716 50               [ 4] 1451 	ld	d, b
      000717 13               [ 6] 1452 	inc	de
      000718 13               [ 6] 1453 	inc	de
      000719 AF               [ 4] 1454 	xor	a, a
      00071A 12               [ 7] 1455 	ld	(de), a
                           00071B  1456 	C$stdlib.c$235$2_0$94	= .
                                   1457 	.globl	C$stdlib.c$235$2_0$94
                                   1458 ;stdlib.c:235: if (prev && !(prev->stat & ALLOCATED))
      00071B DD 7E FD         [19] 1459 	ld	a, -3 (ix)
      00071E DD B6 FC         [19] 1460 	or	a, -4 (ix)
      000721 28 11            [12] 1461 	jr	Z, 00102$
      000723 D1               [10] 1462 	pop	de
      000724 D5               [11] 1463 	push	de
      000725 6B               [ 4] 1464 	ld	l, e
                                   1465 ;	spillPairReg hl
                                   1466 ;	spillPairReg hl
      000726 62               [ 4] 1467 	ld	h, d
                                   1468 ;	spillPairReg hl
                                   1469 ;	spillPairReg hl
      000727 23               [ 6] 1470 	inc	hl
      000728 23               [ 6] 1471 	inc	hl
      000729 7E               [ 7] 1472 	ld	a, (hl)
      00072A 0F               [ 4] 1473 	rrca
      00072B 38 07            [12] 1474 	jr	C, 00102$
                           00072D  1475 	C$stdlib.c$237$3_0$95	= .
                                   1476 	.globl	C$stdlib.c$237$3_0$95
                                   1477 ;stdlib.c:237: _merge_with_next(prev);
      00072D D5               [11] 1478 	push	de
      00072E CDr00r00         [17] 1479 	call	__merge_with_next
      000731 F1               [10] 1480 	pop	af
                           000732  1481 	C$stdlib.c$238$3_0$95	= .
                                   1482 	.globl	C$stdlib.c$238$3_0$95
                                   1483 ;stdlib.c:238: b = prev;
      000732 C1               [10] 1484 	pop	bc
      000733 C5               [11] 1485 	push	bc
      000734                       1486 00102$:
                           000734  1487 	C$stdlib.c$241$2_0$94	= .
                                   1488 	.globl	C$stdlib.c$241$2_0$94
                                   1489 ;stdlib.c:241: if (b->hdr.next && !(((block_t *)(b->hdr.next))->stat & ALLOCATED))
      000734 69               [ 4] 1490 	ld	l, c
      000735 60               [ 4] 1491 	ld	h, b
      000736 5E               [ 7] 1492 	ld	e, (hl)
      000737 23               [ 6] 1493 	inc	hl
      000738 56               [ 7] 1494 	ld	d, (hl)
      000739 7A               [ 4] 1495 	ld	a, d
      00073A B3               [ 4] 1496 	or	a, e
      00073B 28 0B            [12] 1497 	jr	Z, 00109$
      00073D 13               [ 6] 1498 	inc	de
      00073E 13               [ 6] 1499 	inc	de
      00073F 1A               [ 7] 1500 	ld	a, (de)
      000740 0F               [ 4] 1501 	rrca
      000741 38 05            [12] 1502 	jr	C, 00109$
                           000743  1503 	C$stdlib.c$242$2_0$94	= .
                                   1504 	.globl	C$stdlib.c$242$2_0$94
                                   1505 ;stdlib.c:242: _merge_with_next(b);
      000743 C5               [11] 1506 	push	bc
      000744 CDr00r00         [17] 1507 	call	__merge_with_next
      000747 F1               [10] 1508 	pop	af
      000748                       1509 00109$:
                           000748  1510 	C$stdlib.c$244$1_0$93	= .
                                   1511 	.globl	C$stdlib.c$244$1_0$93
                                   1512 ;stdlib.c:244: }
      000748 DD F9            [10] 1513 	ld	sp, ix
      00074A DD E1            [14] 1514 	pop	ix
                           00074C  1515 	C$stdlib.c$244$1_0$93	= .
                                   1516 	.globl	C$stdlib.c$244$1_0$93
                           00074C  1517 	XG$free$0$0	= .
                                   1518 	.globl	XG$free$0$0
      00074C C9               [10] 1519 	ret
                           00074D  1520 	G$calloc$0$0	= .
                                   1521 	.globl	G$calloc$0$0
                           00074D  1522 	C$stdlib.c$246$1_0$97	= .
                                   1523 	.globl	C$stdlib.c$246$1_0$97
                                   1524 ;stdlib.c:246: void *calloc(size_t num, size_t size)
                                   1525 ;	---------------------------------
                                   1526 ; Function calloc
                                   1527 ; ---------------------------------
      00074D                       1528 _calloc::
      00074D DD E5            [15] 1529 	push	ix
      00074F DD 21 00 00      [14] 1530 	ld	ix,#0
      000753 DD 39            [15] 1531 	add	ix,sp
                           000755  1532 	C$stdlib.c$248$1_0$97	= .
                                   1533 	.globl	C$stdlib.c$248$1_0$97
                                   1534 ;stdlib.c:248: size_t bytes = num * size;
      000755 DD 6E 06         [19] 1535 	ld	l, 6 (ix)
                                   1536 ;	spillPairReg hl
                                   1537 ;	spillPairReg hl
      000758 DD 66 07         [19] 1538 	ld	h, 7 (ix)
                                   1539 ;	spillPairReg hl
                                   1540 ;	spillPairReg hl
      00075B E5               [11] 1541 	push	hl
      00075C DD 6E 04         [19] 1542 	ld	l, 4 (ix)
                                   1543 ;	spillPairReg hl
                                   1544 ;	spillPairReg hl
      00075F DD 66 05         [19] 1545 	ld	h, 5 (ix)
                                   1546 ;	spillPairReg hl
                                   1547 ;	spillPairReg hl
      000762 E5               [11] 1548 	push	hl
      000763 CDr00r00         [17] 1549 	call	__mulint
      000766 F1               [10] 1550 	pop	af
      000767 F1               [10] 1551 	pop	af
      000768 EB               [ 4] 1552 	ex	de, hl
                           000769  1553 	C$stdlib.c$249$1_0$97	= .
                                   1554 	.globl	C$stdlib.c$249$1_0$97
                                   1555 ;stdlib.c:249: void *result = malloc(bytes);
      000769 D5               [11] 1556 	push	de
      00076A D5               [11] 1557 	push	de
      00076B CDr6Dr06         [17] 1558 	call	_malloc
      00076E F1               [10] 1559 	pop	af
      00076F D1               [10] 1560 	pop	de
                           000770  1561 	C$stdlib.c$250$1_0$97	= .
                                   1562 	.globl	C$stdlib.c$250$1_0$97
                                   1563 ;stdlib.c:250: memset(result, 0, bytes);
      000770 E5               [11] 1564 	push	hl
      000771 D5               [11] 1565 	push	de
      000772 11 00 00         [10] 1566 	ld	de, #0x0000
      000775 D5               [11] 1567 	push	de
      000776 E5               [11] 1568 	push	hl
      000777 CDr00r00         [17] 1569 	call	_memset
      00077A F1               [10] 1570 	pop	af
      00077B F1               [10] 1571 	pop	af
      00077C F1               [10] 1572 	pop	af
      00077D E1               [10] 1573 	pop	hl
                           00077E  1574 	C$stdlib.c$251$1_0$97	= .
                                   1575 	.globl	C$stdlib.c$251$1_0$97
                                   1576 ;stdlib.c:251: return result;
                           00077E  1577 	C$stdlib.c$252$1_0$97	= .
                                   1578 	.globl	C$stdlib.c$252$1_0$97
                                   1579 ;stdlib.c:252: }
      00077E DD E1            [14] 1580 	pop	ix
                           000780  1581 	C$stdlib.c$252$1_0$97	= .
                                   1582 	.globl	C$stdlib.c$252$1_0$97
                           000780  1583 	XG$calloc$0$0	= .
                                   1584 	.globl	XG$calloc$0$0
      000780 C9               [10] 1585 	ret
                                   1586 	.area _CODE
                                   1587 	.area _INITIALIZER
                           000000  1588 Fstdlib$__xinit__next$0_0$0 == .
      000000                       1589 __xinit___next:
      000000 01 00 00 00           1590 	.byte #0x01, #0x00, #0x00, #0x00	; 1
                                   1591 	.area _CABS (ABS)
